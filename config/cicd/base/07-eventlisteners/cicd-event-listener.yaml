apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  creationTimestamp: null
  name: cicd-event-listener
  namespace: cicd
spec:
  namespaceSelector: {}
  resources: {}
  serviceAccountName: pipeline
  triggers:
  - bindings:
    - ref: github-push-binding
    interceptors:
    - params:
      - name: secretRef
        value:
          secretKey: webhook-secret-key
          secretName: gitops-webhook-secret
      ref:
        name: github
    - params:
      - name: filter
        value: (header.match('X-GitHub-Event', 'push') && body.repository.full_name
          == 'jkeam/openshift-gitops')
      - name: overlays
        value:
        - expression: body.ref.split('/')[2]
          key: ref
      ref:
        name: cel
    name: ci-dryrun-from-push
    template:
      ref: ci-dryrun-from-push-template
  - bindings:
    - ref: dev-app-openshift-taxi-openshift-taxi-binding
    - ref: github-push-binding
    interceptors:
    - params:
      - name: secretRef
        value:
          secretKey: webhook-secret-key
          secretName: webhook-secret-dev-openshift-taxi
      ref:
        name: github
    - params:
      - name: filter
        value: (header.match('X-GitHub-Event', 'push') && body.repository.full_name
          == 'jkeam/openshift-taxi')
      - name: overlays
        value:
        - expression: body.ref.split('/')[2]
          key: ref
      ref:
        name: cel
    name: app-ci-build-from-push-openshift-taxi
    template:
      ref: app-ci-template
  - bindings:
    - ref: stage-full-stack-frontend-service-binding
    - ref: github-push-binding
    interceptors:
    - params:
      - name: secretRef
        value:
          secretKey: webhook-secret-key
          secretName: webhook-secret-stage-frontend-service
      ref:
        name: github
    - params:
      - name: filter
        value: (header.match('X-GitHub-Event', 'push') && body.repository.full_name
          == 'jkeam/openshift-frontend-service')
      - name: overlays
        value:
        - expression: body.ref.split('/')[2]
          key: ref
      ref:
        name: cel
    name: app-ci-build-from-push-frontend-service
    template:
      ref: app-ci-template
  - bindings:
    - ref: stage-full-stack-backend-service-binding
    - ref: github-push-binding
    interceptors:
    - params:
      - name: secretRef
        value:
          secretKey: webhook-secret-key
          secretName: webhook-secret-stage-backend-service
      ref:
        name: github
    - params:
      - name: filter
        value: (header.match('X-GitHub-Event', 'push') && body.repository.full_name
          == 'jkeam/openshift-backend-service')
      - name: overlays
        value:
        - expression: body.ref.split('/')[2]
          key: ref
      ref:
        name: cel
    name: app-ci-build-from-push-backend-service
    template:
      ref: app-ci-template
status:
  configuration:
    generatedName: ""
